{"ast":null,"code":"import _classCallCheck from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/src/pages/Store/Store.js\";\nimport React, { Component } from 'react'; // import API from \"../../utils/API\";\n\nimport CoverPhoto from '../../components/CoverPhoto'; // const config = require(\"../../config.json\");\n\nimport API from \"../../utils/API\";\nimport \"./store.css\";\nimport { Link } from 'react-router-dom';\n\nvar Store =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Store, _Component);\n\n  function Store() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Store)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fileNameArr: \"\",\n      jpgFiles: \"\"\n    };\n\n    _this.getFiles = function () {\n      API.getFiles().then(function (res) {\n        return _this.setState({\n          fileNameArr: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.renderItems = function () {\n      //  console.log(this.state.fileNameArr);\n      var jpgCoverShotsArr = [];\n\n      for (var i = 0; i < _this.state.fileNameArr.length; i++) {\n        // console.log(this.state.fileNameArr[i]);\n        if (_this.state.fileNameArr[i].filename.endsWith(\"jpg\")) {\n          //console.log(\"this is a jpg file \" + this.state.fileNameArr[i].filename);\n          jpgCoverShotsArr.push(React.createElement(Link, {\n            key: _this.state.fileNameArr[i].filename,\n            to: \"/set/\".concat(_this.state.fileNameArr[i].filename),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(CoverPhoto, {\n            key: _this.state.fileNameArr[i].filename,\n            fileName: _this.state.fileNameArr[i].filename,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          })));\n        } else {// console.log(\"this is not a jpg file \" + this.state.fileNameArr[i].filename)\n        }\n      }\n\n      return jpgCoverShotsArr;\n    };\n\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getFiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //store will render a grid of store items \n      // console.log(this.state.fileNameArr)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderItems()));\n    }\n  }]);\n\n  return Store;\n}(Component);\n\n;\nexport default Store;","map":{"version":3,"sources":["/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/src/pages/Store/Store.js"],"names":["React","Component","CoverPhoto","API","Link","Store","state","fileNameArr","jpgFiles","getFiles","then","res","setState","data","catch","err","console","log","renderItems","jpgCoverShotsArr","i","length","filename","endsWith","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,6BAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAMMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAC,EADN;AAENC,MAAAA,QAAQ,EAAC;AAFH,K;;UAKRC,Q,GAAW,YAAM;AACfN,MAAAA,GAAG,CAACM,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AACzBL,UAAAA,WAAW,EAACI,GAAG,CAACE;AADS,SAAd,CAAJ;AAAA,OADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJZ;AAKD,K;;UAQFG,W,GAAc,YAAM;AACnB;AACC,UAAIC,gBAAgB,GAAG,EAAvB;;AAED,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,MAAKd,KAAL,CAAWC,WAAX,CAAuBc,MAAxC,EAAgDD,CAAC,EAAjD,EAAoD;AAClD;AACA,YAAG,MAAKd,KAAL,CAAWC,WAAX,CAAuBa,CAAvB,EAA0BE,QAA1B,CAAmCC,QAAnC,CAA4C,KAA5C,CAAH,EAAsD;AACpD;AACAJ,UAAAA,gBAAgB,CAACK,IAAjB,CAAsB,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAE,MAAKlB,KAAL,CAAWC,WAAX,CAAuBa,CAAvB,EAA0BE,QAArC;AAA+C,YAAA,EAAE,iBAAU,MAAKhB,KAAL,CAAWC,WAAX,CAAuBa,CAAvB,EAA0BE,QAApC,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiG,oBAAC,UAAD;AAAY,YAAA,GAAG,EAAE,MAAKhB,KAAL,CAAWC,WAAX,CAAuBa,CAAvB,EAA0BE,QAA3C;AAAqD,YAAA,QAAQ,EAAE,MAAKhB,KAAL,CAAWC,WAAX,CAAuBa,CAAvB,EAA0BE,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjG,CAAtB;AAED,SAJD,MAIO,CACN;AACA;AACF;;AACD,aAAOH,gBAAP;AACA,K;;;;;;;yCAnBqB;AACnB,WAAKV,QAAL;AACF;;;6BAmBS;AACX;AACA;AAEI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKS,WAAL,EADH,CADF,CADJ;AAQD;;;;EAjDiBjB,S;;AAkDnB;AACD,eAAeI,KAAf","sourcesContent":["import React, { Component } from 'react';\n// import API from \"../../utils/API\";\nimport CoverPhoto from '../../components/CoverPhoto';\n// const config = require(\"../../config.json\");\nimport API from \"../../utils/API\";\nimport \"./store.css\";\nimport { Link } from 'react-router-dom';\n\n\n\n\n\nclass Store extends Component {\n  state = {\n    fileNameArr:\"\",\n    jpgFiles:\"\"\n   }\n\n  getFiles = () => {\n    API.getFiles() \n      .then(res => this.setState({\n        fileNameArr:res.data\n      }))\n      .catch(err => console.log(err))\n  };\n\n\n\n  componentWillMount() {\n    this.getFiles()\n }\n\n renderItems = () => {\n  //  console.log(this.state.fileNameArr);\n   let jpgCoverShotsArr = []\n   \n  for(var i=0; i < this.state.fileNameArr.length; i++){\n    // console.log(this.state.fileNameArr[i]);\n    if(this.state.fileNameArr[i].filename.endsWith(\"jpg\")){\n      //console.log(\"this is a jpg file \" + this.state.fileNameArr[i].filename);\n      jpgCoverShotsArr.push(<Link key={this.state.fileNameArr[i].filename} to={`/set/${this.state.fileNameArr[i].filename}`}><CoverPhoto key={this.state.fileNameArr[i].filename} fileName={this.state.fileNameArr[i].filename}>\n      </CoverPhoto></Link>)\n    } else {\n     // console.log(\"this is not a jpg file \" + this.state.fileNameArr[i].filename)\n    }\n  }\n  return jpgCoverShotsArr\n }\n    \n  render() {\n//store will render a grid of store items \n// console.log(this.state.fileNameArr)\n\n    return (\n        <div >\n          <div className=\"grid\">\n            {this.renderItems()}\n          </div>\n           \n        </div>\n    )\n  }\n};\nexport default Store"]},"metadata":{},"sourceType":"module"}