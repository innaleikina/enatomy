{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/src/components/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport API from \"../../utils/API\";\n\nvar CheckoutForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckoutForm, _Component);\n\n  function CheckoutForm(props) {\n    var _this;\n\n    _classCallCheck(this, CheckoutForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckoutForm).call(this, props));\n\n    _this.addToPurchased = function () {\n      console.log(\"running add to purchased\");\n      console.log(_this.props.cartItems);\n\n      for (var i = 0; i < _this.props.cartItems.length; i++) {\n        console.log(_this.props.cartItems[i]);\n        API.addToPurchased(_this.props.userId, _this.props.cartItems[i]).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.state = {\n      complete: false // cart: this.props.cartItems\n\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckoutForm, [{\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ev) {\n        var billableTotal, _ref, token, url, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                billableTotal = this.props.amount * 100;\n                _context.next = 3;\n                return this.props.stripe.createToken({\n                  name: \"Name\"\n                });\n\n              case 3:\n                _ref = _context.sent;\n                token = _ref.token;\n                url = \"/charge/\" + billableTotal;\n                console.log(url);\n                _context.next = 9;\n                return fetch(url, {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"text/plain\"\n                  },\n                  body: token.id\n                });\n\n              case 9:\n                response = _context.sent;\n                if (response.ok) this.addToPurchased();\n                if (response.ok) this.props.downloadAllSets(); // if (response.ok) this.props.emptyCart();\n\n                if (response.ok) console.log(\"Purchase Complete!\");\n                if (response.ok) this.setState({\n                  complete: true\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      //   console.log(this.props)\n      if (this.state.complete) return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Purchase Complete\"); // console.log(this.props.amount)\n\n      return React.createElement(\"div\", {\n        className: \"checkout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Would you like to complete the purchase?\"), React.createElement(CardElement, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Send\"));\n    }\n  }]);\n\n  return CheckoutForm;\n}(Component);\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/bradleyjones/Desktop/code/eNatomy/enatomy-app/client/src/components/Checkout/Checkout.js"],"names":["React","Component","CardElement","injectStripe","API","CheckoutForm","props","addToPurchased","console","log","cartItems","i","length","userId","catch","err","state","complete","submit","bind","ev","billableTotal","amount","stripe","createToken","name","token","url","fetch","method","headers","body","id","response","ok","downloadAllSets","setState"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,uBAAxC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;IAIMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,UASnBC,cATmB,GASF,YAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWI,SAAvB;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,MAAKL,KAAL,CAAWI,SAAX,CAAqBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAkD;AAC9CH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWI,SAAX,CAAqBC,CAArB,CAAZ;AACHP,QAAAA,GAAG,CAACG,cAAJ,CAAmB,MAAKD,KAAL,CAAWO,MAA9B,EAAsC,MAAKP,KAAL,CAAWI,SAAX,CAAqBC,CAArB,CAAtC,EACCG,KADD,CACO,UAAAC,GAAG;AAAA,iBAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ;AAAA,SADV;AAEA;AACJ,KAjBkB;;AAEjB,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD,CAET;;AAFS,KAAb;AAIA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AANiB;AAOlB;;;;;;;gDAYYC,E;;;;;;;AACPC,gBAAAA,a,GAAgB,KAAKf,KAAL,CAAWgB,MAAX,GAAoB,G;;uBACpB,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,WAAlB,CAA8B;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAA9B,C;;;;AAAfC,gBAAAA,K,QAAAA,K;AAEDC,gBAAAA,G,GAAM,aAAaN,a;AACvBb,gBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;;uBACqBC,KAAK,CAACD,GAAD,EAAO;AACjCE,kBAAAA,MAAM,EAAE,MADyB;AAEjCC,kBAAAA,OAAO,EAAE;AAAC,oCAAgB;AAAjB,mBAFwB;AAGjCC,kBAAAA,IAAI,EAAEL,KAAK,CAACM;AAHqB,iBAAP,C;;;AAAtBC,gBAAAA,Q;AAKN,oBAAIA,QAAQ,CAACC,EAAb,EAAiB,KAAK3B,cAAL;AACjB,oBAAI0B,QAAQ,CAACC,EAAb,EAAiB,KAAK5B,KAAL,CAAW6B,eAAX,G,CACjB;;AAGA,oBAAIF,QAAQ,CAACC,EAAb,EAAiB1B,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACjB,oBAAIwB,QAAQ,CAACC,EAAb,EAAiB,KAAKE,QAAL,CAAc;AAACnB,kBAAAA,QAAQ,EAAE;AAAX,iBAAd;;;;;;;;;;;;;;;;;;6BAGR;AACP;AACA,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP,CAFlB,CAGP;;AACA,aAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CAFF;AAQD;;;;EApDwBjB,S;;AAuD3B,eAAeE,YAAY,CAACE,YAAD,CAA3B","sourcesContent":["import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport API from \"../../utils/API\";\n\n\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        complete: false,\n        // cart: this.props.cartItems\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  addToPurchased = () => {\n      console.log(\"running add to purchased\");\n      console.log(this.props.cartItems)\n      for(var i=0; i < this.props.cartItems.length; i++){\n          console.log(this.props.cartItems[i])\n       API.addToPurchased(this.props.userId, this.props.cartItems[i])\n       .catch(err => console.log(err));\n      }\n  }\n\n  async submit(ev) {\n    let billableTotal = this.props.amount * 100; \n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n\n    let url = \"/charge/\" + billableTotal;\n    console.log(url);\n    let response = await fetch(url , {\n    method: \"POST\",\n    headers: {\"Content-Type\": \"text/plain\"},\n    body: token.id\n  });\n  if (response.ok) this.addToPurchased();\n  if (response.ok) this.props.downloadAllSets();\n  // if (response.ok) this.props.emptyCart();\n\n\n  if (response.ok) console.log(\"Purchase Complete!\")\n  if (response.ok) this.setState({complete: true});\n  }\n\n  render() {\n    //   console.log(this.props)\n    if (this.state.complete) return <h1>Purchase Complete</h1>;\n    // console.log(this.props.amount)\n    return (\n    \n      <div className=\"checkout\">\n        <p>Would you like to complete the purchase?</p>\n        <CardElement />\n        <button onClick={this.submit}>Send</button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}