"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var Element = function (_React$PureComponent) {
  (0, _inherits2.default)(Element, _React$PureComponent);

  function Element() {
    (0, _classCallCheck2.default)(this, Element);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Element).apply(this, arguments));
  }

  (0, _createClass2.default)(Element, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          attributes = _this$props.attributes,
          children = _this$props.children,
          selfClose = _this$props.selfClose,
          Tag = _this$props.tagName;
      return selfClose ? _react.default.createElement(Tag, attributes) : _react.default.createElement(Tag, attributes, children);
    }
  }]);
  return Element;
}(_react.default.PureComponent);

exports.default = Element;
(0, _defineProperty2.default)(Element, "propTypes", {
  attributes: _propTypes.default.any,
  children: _propTypes.default.node,
  selfClose: _propTypes.default.bool,
  tagName: _propTypes.default.any.isRequired
});
(0, _defineProperty2.default)(Element, "defaultProps", {
  attributes: {},
  children: null,
  selfClose: false
});