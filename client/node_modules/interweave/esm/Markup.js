import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _pt from "prop-types";
import React from 'react';
import Element from './Element';
import Parser from './Parser';

var Markup = function (_React$PureComponent) {
  _inherits(Markup, _React$PureComponent);

  function Markup() {
    _classCallCheck(this, Markup);

    return _possibleConstructorReturn(this, _getPrototypeOf(Markup).apply(this, arguments));
  }

  _createClass(Markup, [{
    key: "getContent",
    value: function getContent() {
      var _this$props = this.props,
          _this$props$content = _this$props.content,
          content = _this$props$content === void 0 ? '' : _this$props$content,
          noHtml = _this$props.noHtml,
          noHtmlExceptMatchers = _this$props.noHtmlExceptMatchers,
          disableLineBreaks = _this$props.disableLineBreaks,
          disableWhitelist = _this$props.disableWhitelist,
          emptyContent = _this$props.emptyContent,
          parsedContent = _this$props.parsedContent;

      if (parsedContent) {
        return parsedContent;
      }

      var markup = new Parser(content || '', {
        disableLineBreaks: disableLineBreaks,
        disableWhitelist: disableWhitelist,
        noHtml: noHtml,
        noHtmlExceptMatchers: noHtmlExceptMatchers
      }).parse();
      return markup.length > 0 ? markup : emptyContent;
    }
  }, {
    key: "render",
    value: function render() {
      var content = this.getContent();
      var tag = this.props.tagName;
      return tag === 'fragment' ? React.createElement(React.Fragment, null, content) : React.createElement(Element, {
        tagName: tag || 'div'
      }, content);
    }
  }]);

  return Markup;
}(React.PureComponent);

_defineProperty(Markup, "propTypes", {
  content: _pt.oneOfType([_pt.string, _pt.oneOf([null])]),
  disableLineBreaks: _pt.bool,
  disableWhitelist: _pt.bool,
  emptyContent: _pt.node,
  noHtml: _pt.bool,
  noHtmlExceptMatchers: _pt.bool,
  parsedContent: _pt.node,
  tagName: _pt.oneOfType([_pt.any, _pt.oneOf(['fragment'])])
});

_defineProperty(Markup, "defaultProps", {
  content: '',
  disableLineBreaks: false,
  disableWhitelist: false,
  emptyContent: null,
  noHtml: false,
  noHtmlExceptMatchers: false,
  parsedContent: null,
  tagName: 'div'
});

export { Markup as default };